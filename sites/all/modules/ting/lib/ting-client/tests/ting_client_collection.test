<?php

/**
 * Test for Ting Open Search.
 */
class TingClientCollectionTest extends TingClientTest {
  function __construct($test_id = NULL, $includes = array()) {

    $includes[] = '/../lib/request/TingClientSearchRequest.php';
    $includes[] = '/../lib/request/TingClientCollectionRequest.php';
    $includes[] = '/../lib/result/object/TingClientObject.php';
    $includes[] = '/../lib/result/object/TingClientObjectCollection.php';
    $includes[] = '/../lib/result/object/data/TingClientObjectData.php';
    $includes[] = '/../lib/result/search/TingClientSearchResult.php';
    parent::__construct($test_id, $includes);
  }

  /**
   * Test info.
   */
  public static function getInfo() {
    return array(
      'name' => 'Ting Client collections',
      'description' => 'Test the Ting Open Search collections.' ,
      'group' => 'Ting Client',
    );
  }

  public function testCollectionRetrieval() {
    $searchRequest = $this->requestFactory->getSearchRequest();
    $searchRequest->setQuery('dc.title=danmark');
    $searchRequest->setNumResults(10);
    $searchResult = $this->client->execute($searchRequest);

    $this->assertTrue(sizeof($searchResult->collections) > 0, 'Search should return at least one result');

    $searchCollection = $searchResult->collections[0];
    $this->assertNotNull($searchCollection, 'Search should return at least one collection');

    $collectionRequest = $this->requestFactory->getCollectionRequest();
    $collectionRequest->setObjectId($searchCollection->objects[0]->id);
    $collection = $this->client->execute($collectionRequest);

    $this->assertEqual($searchCollection, $collection, 'Retrieved collection should be equal to search result');
  }
}

