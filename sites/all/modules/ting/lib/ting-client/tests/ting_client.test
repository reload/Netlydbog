<?php

/**
 * Base class for our other test cases.
 */
class TingClientTest extends DrupalWebTestCase {
  /**
   * WSDL URLs.
   */
  const SEARCH_URL = 'http://opensearch.addi.dk/1.1/';
  const SCAN_URL = 'http://openscan.addi.dk/1.7/';
  const RECOMMENDATION_URL = 'http://openadhl.addi.dk/1.1/';
  const SPELL_URL = 'http://openspell.addi.dk/1.2/';

  /**
   * @var TingClient
   */
  protected $client;

  /**
   * @var TingClientRequestFactory
   */
  protected $requestFactory;

  /**
   * Class constructor.
   *
   * When running unit tests, the code registry (and thus code autoload) 
   * is not available, so we'll need to include all the files we need directly.
   */
  function __construct($test_id = NULL, $includes = array()) {
    parent::__construct($test_id);
    $here = dirname(__FILE__);

    // Load defaults first.
    $includes = array_merge(array(
      '/../lib/exception/TingClientException.php',
      '/../lib/log/TingClientLogger.php',
      '/../lib/log/TingClientDrupalDebugLogger.php',
      '/../lib/log/TingClientVoidLogger.php',
      '/../lib/request/TingClientRequestFactory.php',
      '/../lib/request/TingClientRequest.php',
      '/../lib/adapter/TingClientRequestAdapter.php',
      '/../lib/TingClient.php',
    ), $includes);

    // Remove duplicates, so each file is only included once.
    array_unique($includes);

    foreach ($includes as $filename) {
      require_once($here . $filename);
    }
  }

  /**
   * Test info.
   */
  public static function getInfo() {
    return array(
      'name' => 'Ting Client base',
      'description' => 'Base class for Ting Client tests.',
      'group' => 'Ting Client',
    );
  }

  /**
   * Set up modules and client instance.
   */
  public function setUp() {
    parent::setUp('nanosoap');

    module_load_include('inc', 'nanosoap');

    $this->requestFactory = new TingClientRequestFactory(array(
      'search' => self::SEARCH_URL,
      'scan' => self::SCAN_URL,
      'collection' => self::SEARCH_URL,
      'object' => self::SEARCH_URL,
      'recommendation' => self::RECOMMENDATION_URL,
      'spell' => self::SPELL_URL,
    ));

    $requestAdapter = new TingClientRequestAdapter();

    $this->client = new TingClient($requestAdapter, new TingClientDrupalDebugLogger($this));
  }
}

